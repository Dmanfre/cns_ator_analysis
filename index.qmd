---
title: "Does ATOR actually lead to wins?"
author: "Dylan Manfre"
date: '2023-11-10'
format: 
  html:
    code-fold: true
---

Early notes: Data comes from Sports Reference
- the data accounts for around 98% of games frpm 18-24 seasons.


```{r, output=FALSE}
library(tidyverse)
library(ggrepel)
library(janitor)
library(ggplot2)
library(ggalt)
library(rvest)
#install.packages("ggbeeswarm")
library(ggbeeswarm)
```

```{r, output=FALSE}

logs18_24 <- read.csv("https://thescoop.org/sports-data-files/wbblogs1824.csv")
#62,584 records ovver 2018-present

```

establishing lists
```{r, output=FALSE}
power_5 <- c("ACC", "Big 12", "Big Ten", "Pac-12", "SEC")
```


 -------- data cleaning -------------

# 56 duplicates of the team and date but different stats. Many of these games have reocrds and others don't
# We need to get rid of the ones where and assists and turnovers are NA because we cant ID an ator for them. 
# After this, I saw 8 games were duplicates. Some of these just have the wrong datee and I can manually fix that since its so few. Then I think I would need to join the dupes dataframe back to logs_18_24 so that the duplicate dates dont mess up the overall data. 
# Now we are working with 61,267 records

```{r, output=FALSE}
#Getting rid of records where an ator cannot be generated
logs18_24 <- logs18_24 %>%
  filter(!is.na(TeamAssists) & !is.na(TeamTurnovers) & !is.na(OpponentAssists) & !is.na(OpponentTurnovers))
```

```{r, output=FALSE}
dupes <- logs18_24 %>%
  get_dupes(Date, TeamFull)
view(dupes)

# changing the dates in the eight dupes
logs18_24$Date <- ifelse(logs18_24$Date == "2019-11-24" & logs18_24$TeamFull == "Oregon Ducks" & logs18_24$Opponent == "Oklahoma State", "2019-11-28",
            ifelse(logs18_24$Date == "2018-11-24" & logs18_24$TeamFull == "American Eagles" & logs18_24$Opponent == "Hawaii", "2019-11-23",
                ifelse(logs18_24$Date == "2018-11-24" & logs18_24$TeamFull == "Hawaii Rainbow Warriors" & logs18_24$Opponent == "American", "2018-11-23",
                    ifelse(logs18_24$Date == "2023-01-25" & logs18_24$TeamFull == "Chicago State Cougars" & logs18_24$Opponent == "St. Francis (IL)", "2023-01-24", logs18_24$Date))))

#checking the new dupes
logs18_24 %>%
  get_dupes(Date, TeamFull)
view(dupes)

```

mutating certain columns that I may need for the analysis. team_ator, opp_ator and point differnece.
```{r, output=FALSE}
logs18_24 <- logs18_24 %>%
  mutate(
    winloss = case_when(
      grepl("W", W_L) ~ 1,
      grepl("L", W_L) ~ 0),
    team_ator = (TeamAssists) / (TeamTurnovers),
    opp_ator = (OpponentAssists) / (OpponentTurnovers),
    pts_diff = TeamScore - OpponentScore)


logs18_24$Conference <- sub(" WBB", "", logs18_24$Conference)

```

establishing ator only. These columns will be necessary for my analysis. From here on, the main df will be ator_only.
```{r, output=FALSE}
ator_only <- logs18_24 %>%
  select(Season, Date, TeamFull, Conference, Opponent, TeamScore, OpponentScore, winloss, pts_diff, TeamAssists, TeamTurnovers, OpponentAssists, OpponentTurnovers, team_ator, opp_ator)
```

----- exploratory data section -------

# Here I want to establish a data frame with season, TeamFull, winloss, team_ator and opp_ator.
# This will show how many wins a team had in a sesaon, their ator and their opponenets ator.
```{r, output=FALSE}
season_ator <- ator_only %>% 
  group_by(Season, TeamFull, Conference) %>% 
  summarize(season_team_ator = sum(TeamAssists)/sum(TeamTurnovers),
            season_opp_ator = sum(OpponentAssists)/sum(OpponentTurnovers),
            total_wins = sum(winloss)
            )

# To filter for a specific team, inster this: filter(TeamFull == "team_name")
```

```{r, output=FALSE}
#filtering for the ators I want
p5_teams <- season_ator %>% 
  filter(Conference %in% power_5, Season == "2022-2023")

b10 <- season_ator %>% 
filter(Conference == "Big Ten", Season == "2022-2023")

umd <- ator_only %>% 
  filter(TeamFull == "Maryland Terrapins")
```

STORY SENTENCE: `Among the Big Ten teams, Maryland has a high ator and a good amount of wins. The Terps ended the year with an appearance in the elite eight and still played efficient basketball along the way. Near the Terps are Iowa, who was in the championship game last year, and one of the best teams in the nation, along with Indiana and Ohio State.`

```{r}
ggplot() +
  geom_point(data = b10, aes(x = total_wins, y = season_team_ator))+
   geom_text_repel(data = b10, aes(x = total_wins, y = season_team_ator, label = TeamFull))+
  labs(x = "Total Wins",
       y = "Assist to turnover ratio",
       title = "2022-23 seaosn ator",
       subtitle = "Shows all b10 ators from last season with labeled teams",
       caption = "Source: Sports Reference | Chart by Dylan Manfre")
```




Conference ator over the years:

STORY SENTENCE: `Over the last five years, Maryland consistently had a better ratio than the league end of season ator.`

```{r, output=FALSE}
umd_years <- season_ator %>% 
  filter(TeamFull == "Maryland Terrapins")

b10_years <- ator_only %>% 
  filter(Conference == "Big Ten") %>% 
  group_by(Season, Conference) %>% 
  summarise(conf_ator = sum(TeamAssists)/sum(TeamTurnovers))

b10_umd_years <- inner_join(b10_years, umd_years, by="Season")
b10_umd_years <- b10_umd_years %>% select(-c(Conference.y, season_opp_ator)) %>% rename(Conference = Conference.x)

```

STORY SENTENCE: `Maryland this year has structured its schedule to be very difficult playing multiple AP Ranked opponents in its first five games. But, the Terps have posted a ____ record and a ratio of _____ over the first stretch of the season.


```{r}
# Umd 2022-23 ator
umd_22_23_ator <- umd %>% 
  filter(Season == "2022-2023") %>% 
  arrange(desc(TeamAssists))

#First five games of this season
umd_23_24_ator <- umd %>% 
  filter(Season == "2023-2024")

```


Time element: I want to see how Maryland's ator went up or down last season and put a horozontol line with the b10 average.

STORY SENTENCE: `Maryland's ator started out good but really improved in December when it went to a 1.5 which shows it was an incredibly effective team. It's most assists was 21 against Minnesota. And having a 3.5 ratio agaisnt UConn is quite impressive given how good the Huskies have been historically.`

`Maryland had a good ratio in March, when games matter most. Tthe Terps were pushing a 1.52 ratio around tournament time and its opponents were pulling lower than 1.0 highlighting their inefficiencies.`

```{r, output=FALSE}
# Maryland's 2022-23 ator by month
umd_monthly_22_23 <- umd %>% 
  filter(Season =="2022-2023") %>%
  mutate(month = month(Date)) %>%
  group_by(month) %>% 
    summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers),
              opp_monthly_ator = sum(OpponentAssists)/sum(OpponentTurnovers))

```

STORY SENTENCE: `Maryland in 2021 ended with 26 wins and had the best ratio over the five years. (ASK BRENDA WHAT SHE THOUGHT ABOUT THAT TEAM)

```{r}
ggplot(data = umd_years, aes(x = total_wins, y = season_team_ator)) +
  geom_point() +
  geom_text_repel(aes(label = Season)) +
  labs(
    x = "Total Wins",
    y = "Assist to Turnover Ratio",
    title = "Maryland's assist to turnover ratio 2017-24",
    subtitle = "Only five games of 2023-24 have been played.",
    caption = "Source: Sports Reference | Chart by Dylan Manfre"
  )
```

STORY SENTENCE: `Maryland ended last season with 28 wins and had the 15th best ratio out of the Division I teams last year which shows that it is one of the more efficient teams Division I.`

```{r}
# This subset shows every season except 2023-2024.

#adding a difference column to this
season_ator_2022_23 <-  season_ator %>% 
  filter(Season == "2022-2023") %>% 
  mutate(diff_ator = season_team_ator - season_opp_ator)

nova <- season_ator_2022_23 %>% 
  filter(TeamFull == "Villanova Wildcats")

maryland <- season_ator_2022_23 %>% 
  filter(TeamFull == "Maryland Terrapins")

# This will show every team from 2017-23 in gray and 
ggplot() +
  geom_point(data = season_ator_2022_23, aes(x = total_wins, y = season_team_ator))+
  geom_point(data = maryland, aes(x = total_wins, y = season_team_ator, label = TeamFull), colour = "red")+
  geom_text_repel(data = maryland, aes(x = total_wins, y = season_team_ator, label = TeamFull), colour = "red")+
   geom_point(data = nova, aes(x = total_wins, y = season_team_ator, label = TeamFull), colour = "blue")+
  geom_text_repel(data = nova, aes(x = total_wins, y = season_team_ator, label = TeamFull), colour = "blue")+
   geom_point(data = b10, aes(x = total_wins, y = season_team_ator, label = TeamFull), colour = "red")+
  labs(x = "Total Wins",
       y = "Assist to turnover ratio",
       title = "2022-23 seaosn ator",
       subtitle = "Shows all ators from 2022-23 and Big Ten teams highlighted in Red. Nova is the highest ator",
       caption = "Source: Sports Reference | Chart by Dylan Manfre")

```

Analyzing Maryland's 7 game win streak late in the season in 2022-23 which was its longest of the year. During that span, Maryland's ator was a 1.3. Its opponents had a 0.8.

STORY SENTENCE: `Maryland went through a handful of injuries and struggles with many new players joining the roster. It went on a seven-game win streak deep in conference play as it made a push for the Big Ten tournament. During that stretch, it's ratio was a 1.3 while its opponents were pulling a ratio lower than one.

```{r}

umd_22_23_ator %>%
  filter(Date >= "2023-02-05", Date <= "2023-03-03") %>% 
  summarise(seven_game_ator = sum(TeamAssists)/sum(TeamTurnovers),
              opp_seven_game_ator = sum(OpponentAssists)/sum(OpponentTurnovers))

```

Is there a way to find out what the longest win streak was over the period I have data for?


season_2022_23 ator differnece dumbell chart
```{r}
ggplot() + 
  geom_dumbbell(
    data=b10, 
    aes(y=reorder(TeamFull, season_team_ator), x=season_team_ator, xend=season_opp_ator),
    size = 2,
    linewidth = 1,
    color = "grey",
    colour_x = "green",
    colour_xend = "red") + 
  theme_minimal()+
  labs(
    y= "Team",
    x = "2022-2023 Assist to turnover ratio",
    title = "Maryland had much better ball control than its opponents last season"
  )
```

-------- Players data section --------

#First I tried genearating a df with player stats. Goal here was to see if I can create a season_ator for all the players. But the games played is innacurate.

# I had a though of creating a loop and scrapping umd's stats page for a 5 year period, to see who has had the best ator on Maryland over the last five seasons. I tried doing this with sports reference and the advanced scrapper from chapter 35.

# Then I remembered we used wbb player data in class, this is only from 2022-23 seaon though. The current state of that is below. 


```{r}
# Data is from Sports Refernece
players <- read_csv("https://thescoop.org/sports-data-files/wbb_players_2023.csv")

players <- players %>% 
  select(end_year, player, position, team, ncaa_conference, ncaa_division, gp, mp, ast, tov, ast_tov_ratio)

summary(players$gp)
summary(players$mp)
```

Now I need to filter out players who didn't play much or contribute anything to their teams. I also need to filter out players where an ator is NA meaning it could not be calculated.

Average gp is around 20 so I can now filter for players who have played more than that. The average minutes is 392. 
```{r}

players <- players %>% 
  filter(gp >= 20, ncaa_division == "1", ast_tov_ratio != 0) %>% 
  arrange(desc(ast_tov_ratio))

umd_players <- players %>% 
  filter(team == "Maryland")

b10_players <- players %>% 
  filter(ncaa_conference == "Big Ten")

ggplot() + 
  geom_jitter(
    data=b10_players, 
    groupOnX=TRUE, 
    aes(x=position, y=ast_tov_ratio), color="grey") + 
  geom_jitter(
    data=umd_players, 
    groupOnX=TRUE, 
    aes(x=position, y=ast_tov_ratio), color="red") +
  geom_text_repel(
    data=umd_players, 
    aes(x=position, y=ast_tov_ratio, label=player))+
  labs(
    y= "Assist to turnover ratio",
    x = "Position",
    caption = "Source: Sports Reference | Chart by Dylan Manfre",
    title = "I'm obcessed with ATOR",
    subtitle = "includes players with a minimum of 20 games played"
  )
```
Which teams have most players over a 2.0
```{r}

over_2 <- players %>% 
  filter(ast_tov_ratio > 2.0) %>% 
  group_by(team, ncaa_conference, ncaa_division) %>% 
  summarize(number_of_players = n()) %>% 
  arrange(desc(number_of_players))

summary(over_2)
# teams have on average 1.2 players over a 2.0.

```




Exporting data
```{r}

write_csv(b10, "data/b10.csv")
write_csv(season_ator_2022_23, "data/season_ator_2022_23.csv")

```







