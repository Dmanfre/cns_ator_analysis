summarize(season_team_ator = sum(TeamAssists)/sum(TeamTurnovers),
season_opp_ator = sum(OpponentAssists)/sum(OpponentTurnovers),
total_wins = sum(winloss)
)
ator_only %>%
filter(TeamFull == "Maryland Terrapins")
# To filter for a specific team, inster this: filter(TeamFull == "team_name")
#filtering for the ators I want
p5_teams <- season_ator %>%
filter(Conference %in% power_5, Season == "2022-2023")
b10 <- season_ator %>%
filter(Conference == "Big Ten", Season == "2022-2023")
umd <- season_ator %>%
filter(TeamFull == "Maryland Terrapins")
ggplot() +
geom_point(data = p5_teams, aes(x = total_wins, y = season_team_ator))+
geom_text_repel(data = b10, aes(x = total_wins, y = season_team_ator, label = TeamFull))+
labs(x = "Total Wins",
y = "Assist to turnover ratio",
title = "2022-23 seaosn ator",
subtitle = "Shows all p5 ators from last season with b10 teams labeled",
caption = "Source: Sports Reference | Chart by Dylan Manfre")
ator_only %>%
filter(Conference %in% power_5) %>%
group_by(Season, Conference) %>%
summarise(conf_ator = sum(TeamAssists)/sum(TeamTurnovers))
View(umd)
View(ator_only)
umd <- ator_only %>%
filter(TeamFull == "Maryland Terrapins")
View(umd)
ator_only %>%
mutate(month = month(gamedate_east)) %>%
group_by(month) %>%
summarise(avg_ator = mean(winning_ator),
avg_opp_ator = mean(losing_ator)) %>%
arrange(desc(avg_ator))
ator_only %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(winning_ator),
avg_opp_ator = mean(losing_ator)) %>%
arrange(desc(avg_ator))
ator_only %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(winning_ator),
avg_opp_ator = mean(losing_ator)) %>%
arrange(desc(avg_ator))
n
ator_only %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator)) %>%
arrange(desc(avg_ator))
ator_only %>%
filter(TeamFull == "Maryland Terrapins") %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator)) %>%
arrange(desc(avg_ator))
ator_only %>%
filter(TeamFull == "Maryland Terrapins") %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator))
ator_only %>%
filter(TeamFull == "Maryland Terrapins") %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator)) %>%
arrange(month)
ator_only %>%
filter(TeamFull == "Maryland Terrapins") %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator)) %>%
arrange(desc(month))
ator_only %>%
filter(TeamFull == "Maryland Terrapins") %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator))
ator_only %>%
filter(TeamFull == "Maryland Terrapins", season="2022-23") %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator))
ator_only %>%
filter(TeamFull == "Maryland Terrapins", season="2022-2023") %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator))
ator_only %>%
filter(TeamFull == "Maryland Terrapins", season=="2022-2023") %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator))
ator_only %>%
filter(TeamFull == "Maryland Terrapins", Season=="2022-2023") %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator))
ator_only %>%
filter(TeamFull == "Maryland Terrapins", Season=="2022-2023") %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator))
View(umd)
# December games
umd %>%
filter(Season =="2022-2023", Date >= "2022-12-01")
# December games
umd %>%
filter(Season =="2022-2023", Date <= "2022-12-01")
# December games
umd %>%
filter(Season =="2022-2023", Date >= "2022-12-01", Date <= "2022-12-31")
# December games
umd %>%
filter(Season =="2022-2023", Date >= "2022-12-01", Date <= "2022-12-31") %>%
summarise(dec_ator = sum(TeamAssists)/sum(TeamTurnovers))
umd %>%
filter(Season =="2022-2023", Date >= "2022-12-01", Date <= "2022-12-31")
# December games
umd %>%
filter(Season =="2022-2023", Date >= "2022-12-01", Date <= "2022-12-31") %>%
summarise(dec_ator = sum(TeamAssists)/sum(TeamTurnovers))
ator_only %>%
filter(TeamFull == "Maryland Terrapins")
library(tidyverse)
library(ggrepel)
library(janitor)
ator_only %>%
filter(TeamFull == "Maryland Terrapins")
View(p5_teams)
ggplot() +
geom_point(data = p5_teams, aes(x = total_wins, y = season_team_ator))+
geom_text_repel(data = b10, aes(x = total_wins, y = season_team_ator, label = TeamFull))+
labs(x = "Total Wins",
y = "Assist to turnover ratio",
title = "2022-23 seaosn ator",
subtitle = "Shows all p5 ators from last season with b10 teams labeled",
caption = "Source: Sports Reference | Chart by Dylan Manfre")
ator_only %>%
filter(Conference == Big Ten) %>%
ator_only %>%
filter(Conference == "Big Ten") %>%
group_by(Season, Conference) %>%
summarise(conf_ator = sum(TeamAssists)/sum(TeamTurnovers))
ator_only %>%
filter(TeamFull == "Maryland Terrapins")
season_ator %>%
filter(TeamFull == "Maryland Terrapins")
umd_years <- season_ator %>%
filter(TeamFull == "Maryland Terrapins")
b10_umd_years <- inner_join(b10_years, umd_years, by="Season" )
b10_years <- ator_only %>%
filter(Conference == "Big Ten") %>%
group_by(Season, Conference) %>%
summarise(conf_ator = sum(TeamAssists)/sum(TeamTurnovers))
b10_umd_years <- inner_join(b10_years, umd_years, by="Season" )
View(b10_umd_years)
b10_umd_years <- b10_umd_years %>% select(-c(Conference.y, season_opp_ator)) rename(Conference = Conference.x)
b10_umd_years <- b10_umd_years %>% select(-c(Conference.y, season_opp_ator)) %>% rename(Conference = Conference.x)
ator_only %>%
filter(TeamFull == "Maryland Terrapins", Season=="2022-2023") %>%
mutate(month = month(Date)) %>%
group_by(month) %>%
summarise(avg_ator = mean(team_ator),
avg_opp_ator = mean(opp_ator))
# December games
umd %>%
filter(Season =="2022-2023", Date >= "2022-12-01", Date <= "2022-12-31") %>%
summarise(dec_ator = sum(TeamAssists)/sum(TeamTurnovers))
# December games
umd %>%
filter(Season =="2022-2023") %>%
group_by(month)
# December games
umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month)
# December games
umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(dec_ator = sum(TeamAssists)/sum(TeamTurnovers))
# December games
umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(month_ator = sum(TeamAssists)/sum(TeamTurnovers))
# Monthly games
umd %>%
mutate(month = month(Date)) %>%
group_by(Season) %>%
summarise(month_ator = sum(TeamAssists)/sum(TeamTurnovers))
# Monthly games
umd %>%
mutate(month = month(Date)) %>%
group_by(Season) %>%
summarise(ator = sum(TeamAssists)/sum(TeamTurnovers))
# Monthly games
umd %>%
group_by(Season) %>%
summarise(ator = sum(TeamAssists)/sum(TeamTurnovers))
# December games
umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers))
# monthly games using aggregate ators
umd_monthly_22_23 <- umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers))
View(results)
umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurno
umd %>%
View(umd_monthly_22_23)
library(tidyverse)
library(ggrepel)
library(janitor)
logs18_24 <- read.csv("https://thescoop.org/sports-data-files/wbblogs1824.csv")
#62,584 records ovver 2018-present
power_5 <- c("ACC", "Big 12", "Big Ten", "Pac-12", "SEC")
#Getting rid of records where an ator cannot be generated
logs18_24 <- logs18_24 %>%
filter(!is.na(TeamAssists) & !is.na(TeamTurnovers) & !is.na(OpponentAssists) & !is.na(OpponentTurnovers))
dupes <- logs18_24 %>%
get_dupes(Date, TeamFull)
view(dupes)
# changing the dates in the eight dupes
logs18_24$Date <- ifelse(logs18_24$Date == "2019-11-24" & logs18_24$TeamFull == "Oregon Ducks" & logs18_24$Opponent == "Oklahoma State", "2019-11-28",
ifelse(logs18_24$Date == "2018-11-24" & logs18_24$TeamFull == "American Eagles" & logs18_24$Opponent == "Hawaii", "2019-11-23",
ifelse(logs18_24$Date == "2018-11-24" & logs18_24$TeamFull == "Hawaii Rainbow Warriors" & logs18_24$Opponent == "American", "2018-11-23",
ifelse(logs18_24$Date == "2023-01-25" & logs18_24$TeamFull == "Chicago State Cougars" & logs18_24$Opponent == "St. Francis (IL)", "2023-01-24", logs18_24$Date))))
#checking the new dupes
logs18_24 %>%
get_dupes(Date, TeamFull)
view(dupes)
logs18_24 <- logs18_24 %>%
mutate(
winloss = case_when(
grepl("W", W_L) ~ 1,
grepl("L", W_L) ~ 0),
team_ator = (TeamAssists) / (TeamTurnovers),
opp_ator = (OpponentAssists) / (OpponentTurnovers),
pts_diff = TeamScore - OpponentScore)
logs18_24$Conference <- sub(" WBB", "", logs18_24$Conference)
ator_only <- logs18_24 %>%
select(Season, Date, TeamFull, Conference, Opponent, TeamScore, OpponentScore, winloss, pts_diff, TeamAssists, TeamTurnovers, OpponentAssists, OpponentTurnovers, team_ator, opp_ator)
season_ator <- ator_only %>%
group_by(Season, TeamFull, Conference) %>%
summarize(season_team_ator = sum(TeamAssists)/sum(TeamTurnovers),
season_opp_ator = sum(OpponentAssists)/sum(OpponentTurnovers),
total_wins = sum(winloss)
)
ator_only %>%
filter(TeamFull == "Maryland Terrapins")
# To filter for a specific team, inster this: filter(TeamFull == "team_name")
#filtering for the ators I want
p5_teams <- season_ator %>%
filter(Conference %in% power_5, Season == "2022-2023")
b10 <- season_ator %>%
filter(Conference == "Big Ten", Season == "2022-2023")
umd <- ator_only %>%
filter(TeamFull == "Maryland Terrapins")
ggplot() +
geom_point(data = p5_teams, aes(x = total_wins, y = season_team_ator))+
geom_text_repel(data = b10, aes(x = total_wins, y = season_team_ator, label = TeamFull))+
labs(x = "Total Wins",
y = "Assist to turnover ratio",
title = "2022-23 seaosn ator",
subtitle = "Shows all p5 ators from last season with b10 teams labeled",
caption = "Source: Sports Reference | Chart by Dylan Manfre")
umd_years <- season_ator %>%
filter(TeamFull == "Maryland Terrapins")
b10_years <- ator_only %>%
filter(Conference == "Big Ten") %>%
group_by(Season, Conference) %>%
summarise(conf_ator = sum(TeamAssists)/sum(TeamTurnovers))
b10_umd_years <- inner_join(b10_years, umd_years, by="Season")
b10_umd_years <- b10_umd_years %>% select(-c(Conference.y, season_opp_ator)) %>% rename(Conference = Conference.x)
# Maryland's 2022-23 ator by month
umd_monthly_22_23 <- umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers))
umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers))
ator_only %>%
filter(Conference == "Big Ten") %>%
group_by(Season, Conference) %>%
summarise(conf_ator = sum(TeamAssists)/sum(TeamTurnovers))
umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(Season) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers))
umd %>%
mutate(month = month(Date)) %>%
#filter(Season =="2022-2023") %>%
group_by(Season) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers))
View(b10_umd_years)
ggplot() +
geom_point(data = p5_teams, aes(x = total_wins, y = season_team_ator))+
geom_text_repel(data = b10, aes(x = total_wins, y = season_team_ator, label = TeamFull))+
labs(x = "Total Wins",
y = "Assist to turnover ratio",
title = "2022-23 seaosn ator",
subtitle = "Shows all p5 ators from last season with b10 teams labeled",
caption = "Source: Sports Reference | Chart by Dylan Manfre")
library(tidyverse)
library(ggrepel)
library(janitor)
ggplot() +
geom_point(data = p5_teams, aes(x = total_wins, y = season_team_ator))+
geom_text_repel(data = b10, aes(x = total_wins, y = season_team_ator, label = TeamFull))+
labs(x = "Total Wins",
y = "Assist to turnover ratio",
title = "2022-23 seaosn ator",
subtitle = "Shows all p5 ators from last season with b10 teams labeled",
caption = "Source: Sports Reference | Chart by Dylan Manfre")
plot1 <- ggplot() +
geom_point(data = p5_teams, aes(x = total_wins, y = season_team_ator))+
geom_text_repel(data = b10, aes(x = total_wins, y = season_team_ator, label = TeamFull))+
labs(x = "Total Wins",
y = "Assist to turnover ratio",
title = "2022-23 seaosn ator",
subtitle = "Shows all p5 ators from last season with b10 teams labeled",
caption = "Source: Sports Reference | Chart by Dylan Manfre")
View(plot1)
library(tidyverse)
library(ggrepel)
library(janitor)
logs18_24 <- read.csv("https://thescoop.org/sports-data-files/wbblogs1824.csv")
#62,584 records ovver 2018-present
power_5 <- c("ACC", "Big 12", "Big Ten", "Pac-12", "SEC")
#Getting rid of records where an ator cannot be generated
logs18_24 <- logs18_24 %>%
filter(!is.na(TeamAssists) & !is.na(TeamTurnovers) & !is.na(OpponentAssists) & !is.na(OpponentTurnovers))
dupes <- logs18_24 %>%
get_dupes(Date, TeamFull)
view(dupes)
# changing the dates in the eight dupes
logs18_24$Date <- ifelse(logs18_24$Date == "2019-11-24" & logs18_24$TeamFull == "Oregon Ducks" & logs18_24$Opponent == "Oklahoma State", "2019-11-28",
ifelse(logs18_24$Date == "2018-11-24" & logs18_24$TeamFull == "American Eagles" & logs18_24$Opponent == "Hawaii", "2019-11-23",
ifelse(logs18_24$Date == "2018-11-24" & logs18_24$TeamFull == "Hawaii Rainbow Warriors" & logs18_24$Opponent == "American", "2018-11-23",
ifelse(logs18_24$Date == "2023-01-25" & logs18_24$TeamFull == "Chicago State Cougars" & logs18_24$Opponent == "St. Francis (IL)", "2023-01-24", logs18_24$Date))))
#checking the new dupes
logs18_24 %>%
get_dupes(Date, TeamFull)
view(dupes)
logs18_24 <- logs18_24 %>%
mutate(
winloss = case_when(
grepl("W", W_L) ~ 1,
grepl("L", W_L) ~ 0),
team_ator = (TeamAssists) / (TeamTurnovers),
opp_ator = (OpponentAssists) / (OpponentTurnovers),
pts_diff = TeamScore - OpponentScore)
logs18_24$Conference <- sub(" WBB", "", logs18_24$Conference)
ator_only <- logs18_24 %>%
select(Season, Date, TeamFull, Conference, Opponent, TeamScore, OpponentScore, winloss, pts_diff, TeamAssists, TeamTurnovers, OpponentAssists, OpponentTurnovers, team_ator, opp_ator)
season_ator <- ator_only %>%
group_by(Season, TeamFull, Conference) %>%
summarize(season_team_ator = sum(TeamAssists)/sum(TeamTurnovers),
season_opp_ator = sum(OpponentAssists)/sum(OpponentTurnovers),
total_wins = sum(winloss)
)
ator_only %>%
filter(TeamFull == "Maryland Terrapins")
# To filter for a specific team, inster this: filter(TeamFull == "team_name")
#filtering for the ators I want
p5_teams <- season_ator %>%
filter(Conference %in% power_5, Season == "2022-2023")
b10 <- season_ator %>%
filter(Conference == "Big Ten", Season == "2022-2023")
umd <- ator_only %>%
filter(TeamFull == "Maryland Terrapins")
ggplot() +
geom_point(data = p5_teams, aes(x = total_wins, y = season_team_ator))+
geom_text_repel(data = b10, aes(x = total_wins, y = season_team_ator, label = TeamFull))+
labs(x = "Total Wins",
y = "Assist to turnover ratio",
title = "2022-23 seaosn ator",
subtitle = "Shows all p5 ators from last season with b10 teams labeled",
caption = "Source: Sports Reference | Chart by Dylan Manfre")
umd_years <- season_ator %>%
filter(TeamFull == "Maryland Terrapins")
b10_years <- ator_only %>%
filter(Conference == "Big Ten") %>%
group_by(Season, Conference) %>%
summarise(conf_ator = sum(TeamAssists)/sum(TeamTurnovers))
b10_umd_years <- inner_join(b10_years, umd_years, by="Season")
b10_umd_years <- b10_umd_years %>% select(-c(Conference.y, season_opp_ator)) %>% rename(Conference = Conference.x)
# Maryland's 2022-23 ator by month
umd_monthly_22_23 <- umd %>%
mutate(month = month(Date)) %>%
#filter(Season =="2022-2023") %>%
group_by(Season) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers))
umd %>%
mutate(month = month(Date)) %>%
#filter(Season =="2022-2023") %>%
group_by(Season) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers))
umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(Season) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers))
umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers))
# Maryland's 2022-23 ator by month
umd_monthly_22_23 <- umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers))
umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers),
opp_monthly_ator = sum(OpponentAssists)/sum(OpponentTurnovers))
# Maryland's 2022-23 ator by month
umd_monthly_22_23 <- umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers),
opp_monthly_ator = sum(OpponentAssists)/sum(OpponentTurnovers))
umd %>%
mutate(month = month(Date)) %>%
filter(Season =="2022-2023") %>%
group_by(month) %>%
summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers),
opp_monthly_ator = sum(OpponentAssists)/sum(OpponentTurnovers))
season_ator <- ator_only %>%
group_by(Season, TeamFull, Conference) %>%
summarize(season_team_ator = sum(TeamAssists)/sum(TeamTurnovers),
season_opp_ator = sum(OpponentAssists)/sum(OpponentTurnovers),
total_wins = sum(winloss)
)
ator_only %>%
filter(TeamFull == "Maryland Terrapins")
season_ator %>%
filter(TeamFull == "Maryland Terrapins")
ator_only %>%
filter(TeamFull == "Maryland Terrapins")
ator_only %>%
filter(TeamFull == "Maryland Terrapins")
umd <- ator_only %>%
filter(TeamFull == "Maryland Terrapins")
View(umd_monthly_22_23)
View(umd)
ggplot()+
ggplot() + geom_line(data=umd, aes(x=Date, y=team_ator))
ggplot() + geom_line(data=umd, aes(x=Date, y=team_ator))
umd %>%
filter(season = "2022-2023")
umd %>%
filter(Season = "2022-2023")
umd %>%
filter(Season == "2022-2023")
umd_22_23_ator <- umd %>%
filter(Season == "2022-2023")
ggplot() + geom_line(data=umd_22_23_ator, aes(x=Date, y=team_ator))
umd_22_23_ator <- umd %>%
filter(Season == "2022-2023")
ggplot() + geom_line(data=umd_22_23_ator, aes(x=Date, y=team_ator))
View(umd_22_23_ator)
ggplot() + geom_line(data=umd_22_23_ator, aes(x=Date, y=team_ator))
ggplot() + geom_line(data=umd_22_23_ator, aes(x=Date, y=team_ator))
ggplot() + geom_line(data=umd_22_23_ator, aes(x=Date, y=team_ator))
ggplot() +
geom_line(data = umd_22_23_ator, aes(x = Date, y = team_ator))
ggplot() +
geom_line(data = umd_22_23_ator, aes(x = Date, y = team_ator))
ggplot() +
geom_line(data = umd_22_23_ator, aes(x = Date, y = team_ator, group=1))
