{"frames":[{"func":"umd %>% filter(Season == \"2022-2023\") %>% mutate(month = month(Date)) %>% \n    group_by(month) %>% summarise(monthly_ator = sum(TeamAssists)/sum(TeamTurnovers), \n    opp_monthly_ator = sum(OpponentAssists)/sum(OpponentTurnovers))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"summarise(., monthly_ator = sum(TeamAssists)/sum(TeamTurnovers), \n    opp_monthly_ator = sum(OpponentAssists)/sum(OpponentTurnovers))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"group_by(., month)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., month = month(Date))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate.data.frame(., month = month(Date))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_cols(.data, dplyr_quosures(...), by)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(for (i in seq_along(dots)) {\n    poke_error_context(dots, i, mask = mask)\n    context_poke(\"column\", old_current_column)\n    new_columns <- mutate_col(dots[[i]], data, mask, new_columns) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate_col(dots[[i]], data, mask, new_columns)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mask$eval_all_mutate(quo)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"month(Date)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"month.default(Date)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"month(as.POSIXlt(x, tz = tz(x))$mon + 1, label, abbr, locale = locale)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"as.POSIXlt(x, tz = tz(x))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"as.POSIXlt.character(x, tz = tz(x))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"character string is not in a standard unambiguous format\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".handleSimpleError(function (cnd) \n{\n    local_error_context(dots, i = frame[[i_sym]], mask = mask)\n    if (inherits(cnd, \"dplyr:::internal_error\")) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"h(simpleError(msg, call))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = error_class, parent = parent, call = error_call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in mutate(., month = month(Date)) : \n\u001B[1mCaused by error in `as.POSIXlt.character()`:\u001B[22m\n\u001B[33m!\u001B[39m character string is not in a standard unambiguous format\n"}